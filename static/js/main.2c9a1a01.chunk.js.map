{"version":3,"sources":["components/MovieCard/components/MoveCardImg/MoveCardImg.tsx","components/MovieCard/components/MoveCardDescription/MoveCardDescription.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/components/PreviewMovie/PreviewMovie.tsx","api.ts","components/Button/Button.tsx","components/Input/Input.tsx","components/LoadingError/LoadingError.tsx","components/FindMovie/components/FindMovieForm/FindMovieForm.tsx","helpers.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MoveCardImg","_ref","url","alt","dataCy","className","_jsx","classnames","children","src","MoveCardDescription","imdbUrl","description","_jsxs","href","MovieCard","memo","movie","imgUrl","title","MoviesList","movies","map","imdbId","PreviewMovie","API_URL","concat","Button","type","content","loading","onClick","_ref$disabled","disabled","Input","id","value","label","hasError","placeholder","onChange","_Fragment","htmlFor","LoadingError","textError","FindMovieForm","setMovie","handleAddMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","setLoading","_useState5","_useState6","setHasError","_useState7","_useState8","hasLoadingError","setHasLoadingError","isDisabled","useMemo","length","handleOnChange","useCallback","event","target","handleOnSubmit","preventDefault","fetch","then","response","_response$headers$get","ok","status","statusText","headers","get","includes","json","getMovie","movieData","Title","Plot","Poster","imdbID","catch","finally","useEffect","onSubmit","FindMovie","App","setMovies","hasMovie","find","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c9a1a01.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { MovieCardImg } from '../../../../types/Movie';\n\nexport const MoveCardImg: React.FC<MovieCardImg> = ({\n  url,\n  alt,\n  dataCy,\n  className,\n}) => (\n  <figure className={classnames('image', className)}>\n    <img\n      src={url}\n      alt={alt}\n      data-cy={dataCy}\n    />\n  </figure>\n);\n","import { MovieCardDescripton } from '../../../../types/Movie';\n\nexport const MoveCardDescription: React.FC<MovieCardDescripton> = ({\n  imdbUrl,\n  description,\n}) => (\n  <div className=\"content\" data-cy=\"movieDescription\">\n    {description}\n    <br />\n    <a href={imdbUrl} data-cy=\"movieURL\">\n      IMDB\n    </a>\n  </div>\n);\n","import React, { memo } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { MoveCardImg } from './components/MoveCardImg';\nimport { MoveCardDescription } from './components/MoveCardDescription';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const MovieCard: React.FC<Props> = memo(\n  ({ movie }) => (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <MoveCardImg\n          alt=\"Film logo\"\n          url={movie.imgUrl}\n          className=\"is-4by3\"\n          data-cy=\"moviePoster\"\n        />\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <MoveCardImg\n              alt=\"imdb\"\n              className=\"is-48x48\"\n              url=\"images/imdb-logo.jpeg\"\n            />\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {movie.title}\n            </p>\n          </div>\n        </div>\n\n        <MoveCardDescription\n          imdbUrl={movie.imdbUrl}\n          description={movie.description}\n        />\n      </div>\n    </div>\n  ),\n);\n","import React, { memo } from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = memo(\n  ({ movies }) => (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  ),\n);\n","import { memo } from 'react';\nimport { Movie } from '../../../../types/Movie';\nimport { MovieCard } from '../../../MovieCard';\n\ninterface Props {\n  movie: Movie;\n}\n\nexport const PreviewMovie: React.FC<Props> = memo(\n  ({ movie }) => (\n    <div className=\"container\" data-cy=\"previewContainer\">\n      <h2 className=\"title\">Preview</h2>\n      {movie && (\n        <MovieCard\n          movie={movie}\n        />\n      )}\n    </div>\n  ),\n);\n","import { GetMovie } from './types/events';\n\nconst API_KEY = '132d4730';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport const getMovie: GetMovie = query => fetch(`${API_URL}&t=${query}`)\n  .then(response => {\n    if (!response.ok) {\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw `${response.status} - ${response.statusText}`;\n    }\n\n    if (!response.headers.get('content-type')?.includes('application/json')) {\n      // eslint-disable-next-line @typescript-eslint/no-throw-literal\n      throw 'Content type is not supported';\n    }\n\n    return response.json();\n  });\n","import classnames from 'classnames';\nimport { memo } from 'react';\nimport { ButtonTypes } from '../../types/ButtonTypes';\n\nexport const Button: React.FC<ButtonTypes> = memo(\n  ({\n    type,\n    dataCy,\n    content,\n    loading,\n    className,\n    onClick,\n    disabled = false,\n  }) => (\n    <button\n      // eslint-disable-next-line react/button-has-type\n      type={type}\n      data-cy={dataCy}\n      disabled={disabled}\n      className={classnames(\n        'button',\n        className,\n        { 'is-loading': loading },\n      )}\n      onClick={onClick}\n    >\n      {content}\n    </button>\n  ),\n);\n","import classnames from 'classnames';\nimport { InputProps } from '../../types/Input';\n\nexport const Input: React.FC<InputProps> = ({\n  id,\n  type,\n  value,\n  label,\n  dataCy,\n  hasError,\n  placeholder,\n  onChange,\n}) => (\n  <>\n    <label className=\"label\" htmlFor={id}>\n      {label}\n    </label>\n\n    <div className=\"control\">\n      <input\n        id={id}\n        type={type}\n        value={value}\n        data-cy={dataCy}\n        placeholder={placeholder}\n        className={classnames('input', { 'is-dander': hasError })}\n        onChange={onChange}\n      />\n    </div>\n\n    {hasError && (\n      <p className=\"help is-danger\" data-cy=\"errorMessage\">\n        Can&apos;t find a movie with such a title\n      </p>\n    )}\n  </>\n);\n","interface Props {\n  textError: string;\n}\n\nexport const LoadingError: React.FC<Props> = ({ textError }) => (\n  <div className=\"notification is-danger is-light\">\n    {`An error occured when loading ${textError}!`}\n  </div>\n);\n","import {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { getMovie } from '../../../../api';\nimport { checkImageUrl } from '../../../../helpers';\nimport { OnChange, OnSumbit } from '../../../../types/events';\nimport { FindMovieProps } from '../../../../types/FindMovie';\nimport { Button } from '../../../Button';\nimport { Input } from '../../../Input';\nimport { LoadingError } from '../../../LoadingError';\n\nimport './FindMovie.scss';\n\nexport const FindMovieForm: React.FC<FindMovieProps> = memo(\n  ({\n    movie,\n    setMovie,\n    handleAddMovie,\n  }) => {\n    const [query, setQuery] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [hasError, setHasError] = useState(false);\n    const [hasLoadingError, setHasLoadingError] = useState(false);\n\n    const isDisabled = useMemo(() => !query?.length, [query]);\n\n    const handleOnChange:OnChange = useCallback(event => {\n      if (hasError) {\n        setHasError(false);\n      }\n\n      const { value } = event.target;\n\n      setQuery(value);\n    }, [hasError]);\n\n    const handleOnSubmit:OnSumbit = useCallback(event => {\n      event.preventDefault();\n\n      setLoading(true);\n\n      getMovie(query)\n        .then((movieData) => {\n          if ('imdbID' in movieData) {\n            setMovie({\n              title: movieData.Title,\n              description: movieData.Plot,\n              imgUrl: checkImageUrl(movieData.Poster),\n              imdbId: movieData.imdbID,\n              imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n            });\n          }\n\n          if ('Error' in movieData) {\n            setHasError(true);\n          }\n        })\n        .catch(() => setHasLoadingError(true))\n        .finally(() => setLoading(false));\n    }, [query, hasError]);\n\n    useEffect(() => {\n      if (!movie) {\n        setQuery('');\n      }\n    }, [movie]);\n\n    return (\n      <form className=\"find-movie\" onSubmit={handleOnSubmit}>\n        <div className=\"field\">\n          <Input\n            value={query}\n            id=\"movie-title\"\n            label=\"Movie title\"\n            dataCy=\"titleField\"\n            placeholder=\"Enter a title to search\"\n            hasError={hasError}\n            onChange={handleOnChange}\n          />\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <Button\n              type=\"submit\"\n              loading={loading}\n              dataCy=\"searchButton\"\n              className=\"is-light\"\n              disabled={isDisabled}\n              content=\"Find a movie\"\n            />\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <Button\n                type=\"button\"\n                dataCy=\"addButton\"\n                className=\"is-primary\"\n                content=\"Add to the list\"\n                onClick={handleAddMovie}\n              />\n            </div>\n          )}\n        </div>\n\n        {hasLoadingError && (\n          <LoadingError textError=\"movie\" />\n        )}\n      </form>\n    );\n  },\n);\n","export const checkImageUrl = (url: string) => {\n  if (url === 'N/A') {\n    return 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  return url;\n};\n","import { PreviewMovie } from './components/PreviewMovie';\nimport { FindMovieForm } from './components/FindMovieForm';\nimport { FindMovieProps } from '../../types/FindMovie';\n\nexport const FindMovie: React.FC<FindMovieProps> = ({\n  movie,\n  setMovie,\n  handleAddMovie,\n}) => (\n  <>\n    <FindMovieForm\n      movie={movie}\n      setMovie={setMovie}\n      handleAddMovie={handleAddMovie}\n    />\n\n    {movie && (\n      <PreviewMovie movie={movie} />\n    )}\n  </>\n);\n","import { useCallback, useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleAddMovie = useCallback(() => {\n    const hasMovie = movies.find(({ imdbId }) => imdbId === movie?.imdbId);\n\n    if (movie && !hasMovie) {\n      setMovies([...movies, movie]);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie(null);\n  }, [movie, movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {!!movies.length && <MoviesList movies={movies} />}\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={movie}\n          setMovie={setMovie}\n          handleAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}